---
image: gitlab/dind

variables:
  CONTAINER_TEST_IMAGE: $REGISTRY_ADDR/hexaa/hexaa-backend:$CI_COMMIT_REF_NAME
  CONTAINER_RELEASE_IMAGE: $REGISTRY_ADDR/hexaa/hexaa-backend:latest
  CONTAINER_STAGING_IMAGE: $REGISTRY_ADDR/hexaa/hexaa-backend:staging
  CONTAINER_STAGING_RELEASE_IMAGE: hexaaproject/hexaa-backend:staging
  CONTAINER_STABLE_IMAGE: $REGISTRY_ADDR/hexaa/hexaa-backend:latest
  CONTAINER_STABLE_RELEASE_IMAGE: hexaaproject/hexaa-backend:latest

services:
- docker:dind

stages:
- build
#- test
- release
- deploy

before_script:
  - docker info
  - whoami
  - hostname

  # Log into our private docker hub
  - docker login -u $REGISTRY_USER -p $REGISTRY_PASS $REGISTRY_ADDR

  # Install ssh-agent if not already installed, it is required by Docker.
  # (change apt-get to yum if you use a CentOS-based image)
  - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'

  # Run ssh-agent (inside the build environment)
  - eval $(ssh-agent -s)

  # Add the SSH key stored in SSH_PRIVATE_KEY variable to the agent store
  - ssh-add <(echo "$SSH_PRIVATE_KEY")

  # For Docker builds disable host key checking. Be aware that by adding that
  # you are suspectible to man-in-the-middle attacks.
  # WARNING: Use this only with the Docker executor, if you use it with shell
  # you will overwrite your user's SSH config.
  - mkdir -p ~/.ssh
  - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'

build:
  stage: build
  script:
    - docker build -t $CONTAINER_TEST_IMAGE -f docker-prod/Dockerfile .
    - docker push $CONTAINER_TEST_IMAGE
  tags:
    - dind

release_staging:
  stage: release
  script:
    - docker pull $CONTAINER_TEST_IMAGE
    # log in to hub.docker.com
    - docker login -u $DOCKERHUB_REGISTRY_USER -p $DOCKERHUB_REGISTRY_PASS

    - docker tag $CONTAINER_TEST_IMAGE $CONTAINER_STAGING_RELEASE_IMAGE
    - docker push $CONTAINER_STAGING_RELEASE_IMAGE
  only:
    - staging
  tags:
    - dind

release_stable:
  stage: release
  script:
    - docker pull $CONTAINER_TEST_IMAGE

    - docker tag $CONTAINER_TEST_IMAGE $CONTAINER_STABLE_IMAGE
    - docker push $CONTAINER_STABLE_IMAGE

    # log in to hub.docker.com
    - docker login -u $DOCKERHUB_REGISTRY_USER -p $DOCKERHUB_REGISTRY_PASS

    - docker tag $CONTAINER_TEST_IMAGE $CONTAINER_STABLE_RELASE_IMAGE
    - docker push $CONTAINER_STABLE_RELASE_IMAGE
  only:
    - master
  tags:
    - dind
