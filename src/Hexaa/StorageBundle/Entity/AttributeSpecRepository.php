<?php

/**
 * Copyright 2014-2018 MTA SZTAKI, ugyeletes@sztaki.hu
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

namespace Hexaa\StorageBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * AttributeSpecRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class AttributeSpecRepository extends EntityRepository
{
    public function findAllByPrincipal(Principal $p, $limit = null, $offset = 0)
    {
        $ass = $this->getEntityManager()->createQueryBuilder()
          ->select('attrspec')
          ->from('HexaaStorageBundle:AttributeSpec', 'attrspec')
          ->innerJoin('attrspec.serviceAttributeSpecs', 'sas')
          ->innerJoin('sas.service', 's')
          ->innerJoin('s.links', 'link')
          ->innerJoin('link.organization', 'o')
          ->where(':p MEMBER OF o.principals')
          ->andWhere("link.status = 'accepted'")
          ->andWhere("s.isEnabled=true")
          ->andWhere("attrspec.maintainer = 'user'")
          ->setParameters(array("p" => $p))
          ->getQuery()
          ->getResult();

        // Add public attribute specifications
        $sass = $this->getEntityManager()->getRepository('HexaaStorageBundle:ServiceAttributeSpec')->findByIsPublic(true);
        foreach ($sass as $sas) {
            if ((!in_array($sas->getAttributeSpec(), $ass, true))) {
                if ($sas->getAttributeSpec()->getMaintainer() == "user") {
                    $ass[] = $sas->getAttributeSpec();
                }
            }
        }

        $ass = array_filter($ass);

        return $ass;
    }

    public function findAllByOrganization(Organization $o)
    {
        $retarr = $this->getEntityManager()->createQueryBuilder()
          ->select('attrspec')
          ->from('HexaaStorageBundle:AttributeSpec', 'attrspec')
          ->innerJoin('attrspec.serviceAttributeSpecs', 'sas')
          ->innerJoin('sas.service', 's')
          ->innerJoin('s.links', 'link')
          ->where('link.organization = :o')
          ->andWhere("link.status = 'accepted'")
          ->andWhere("attrspec.maintainer = 'manager'")
          ->setParameters(array("o" => $o))
          ->getQuery()
          ->getResult();
        $sass = $this->getEntityManager()->getRepository('HexaaStorageBundle:ServiceAttributeSpec')->findByIsPublic(true);
        foreach ($sass as $sas) {
            if (!in_array($sas->getAttributeSpec(), $retarr, true)) {
                if ($sas->getAttributeSpec()->getMaintainer() == "manager") {
                    $retarr[] = $sas->getAttributeSpec();
                }
            }
        }
        $retarr = array_filter($retarr);

        return $retarr;
    }
}
