parameters:


# Hooks
    hook_handler.class:                     Hexaa\ApiBundle\Hook\HookHandler
    expire_linker_token_hook.class:         Hexaa\ApiBundle\Hook\ExpireHook\ExpireLinkerTokensHook
    expire_principal_hook.class:            Hexaa\ApiBundle\Hook\ExpireHook\ExpirePrincipalsHook
    review_attributes_hook.class:           Hexaa\ApiBundle\Hook\ExpireHook\ReviewAttributesHook
    hexaa_hook_hint_resolver.class:         Hexaa\ApiBundle\Hook\HookHintResolver

# Commands
    hexaa_expire_command.class:             Hexaa\StorageBundle\Command\ExpireCommand
    hexaa_remove_public_attribute_specs_command.class: Hexaa\StorageBundle\Command\RemovePublicAttributeSpecsCommand
    hexaa_dispatch_hook_command.class:      Hexaa\StorageBundle\Command\DispatchHookCommand

# Handlers
    hexaa_entity_handler.class:             Hexaa\ApiBundle\Handler\EntityHandler
    hexaa_attribute_cache_handler.class:    Hexaa\ApiBundle\Handler\AttributeCacheHandler

#Security
    personal_apikey_user_provider.class:    Hexaa\ApiBundle\Security\personalApiKey\PersonalApiKeyUserProvider
    personal_apikey_authenticator.class:    Hexaa\ApiBundle\Security\personalApiKey\PersonalApiKeyAuthenticator
    master_secret_user_provider.class:      Hexaa\ApiBundle\Security\masterSecret\MasterSecretUserProvider
    master_secret_authenticator.class:      Hexaa\ApiBundle\Security\masterSecret\MasterSecretAuthenticator

# EventListeners
    hexaa_check_policy_listener.class:      Hexaa\ApiBundle\EventListener\CheckPolicyListener
    hexaa_hook_listener.class:              Hexaa\ApiBundle\EventListener\HookListener

# Util
    hexaa_hook_extractor.class:             Hexaa\StorageBundle\Util\HookExtractor

services:

# Hooks
    hexaa.hook.hook_handler:
        class: "%hook_handler.class%"
        arguments: [ "@monolog.logger.error" ]
    hexaa.hook.expire_linker_token_hook:
        class: "%expire_linker_token_hook.class%"
        arguments: [ "@doctrine.orm.entity_manager", "@monolog.logger.modification", "@monolog.logger.error" ]
        lazy: true
    hexaa.hook.expire_principal_hook:
        class: "%expire_principal_hook.class%"
        arguments: [ "@doctrine.orm.entity_manager", "@monolog.logger.modification", "@monolog.logger.error", "@monolog.logger.email", "@mailer", "%hexaa_ui_url%", "%hexaa_from_address%", "%hexaa_principal_expiration_limit%" ]
        lazy: true
    hexaa.hook.review_attributes_hook:
        class: "%review_attributes_hook.class%"
        arguments: [ "@doctrine.orm.entity_manager", "@monolog.logger.modification", "@monolog.logger.error", "@monolog.logger.email", "@mailer", "%hexaa_ui_url%", "%hexaa_from_address%" ]
        lazy: true
    hexaa.hook.hook_hint_resolver:
        class: "%hexaa_hook_hint_resolver.class%"
        arguments: ["@doctrine.orm.entity_manager", "@security.token_storage"]

# Caching
    memcached:
        class: Memcached
        calls:
            - [ addServers, [ "%memcache_hosts%" ] ]

    doctrine.cache.memcached:
        class: Doctrine\Common\Cache\MemcachedCache
        calls:
            - [ setMemcached, [ "@memcached" ] ]

    hexaa.hook.cache.memcached:
        class: Doctrine\Common\Cache\MemcachedCache
        calls:
            - [ setMemcached, [ "@memcached" ] ]
            - [ setNamespace, [ "hexaa.hook_" ] ]

# Handlers
    hexaa.handler.entity_handler:
        class: "%hexaa_entity_handler.class%"
        arguments: [ "@doctrine.orm.entity_manager", "@monolog.logger.error" ]
    hexaa.handler.attribute_cache_handler:
        class: "%hexaa_attribute_cache_handler.class%"
        arguments: [ "@doctrine.orm.entity_manager", "@hexaa.hook.cache.memcached"]

# Commands
    hexaa.commands.expire:
        class: "%hexaa_expire_command.class%"
        arguments: [ "@hexaa.hook.expire_linker_token_hook", "@hexaa.hook.expire_principal_hook", "@hexaa.hook.review_attributes_hook" ]
        tags:
            - { name: console.command }
    hexaa.commands.remove_public_attribute_specs:
        class: "%hexaa_remove_public_attribute_specs_command.class%"
        arguments: [ "@doctrine.orm.entity_manager" ]
        tags:
            - { name: console.command }
    hexaa.commands.dispatch_hook:
        class: "%hexaa_dispatch_hook_command.class%"
        arguments: [ "@doctrine.orm.entity_manager", "@hexaa.hook_extractor.service", "@monolog.logger.hook" ]
        tags:
            - { name: console.command }

# Security
    personal_apikey_user_provider:
        class: "%personal_apikey_user_provider.class%"
        arguments: [ "@doctrine.orm.entity_manager", "@monolog.logger.login", "@monolog.logger.modification" ]
    personal_apikey_authenticator:
        class:     "%personal_apikey_authenticator.class%"
        arguments: ["@personal_apikey_user_provider", "@security.http_utils", "@monolog.logger.login", "%hexaa_auth_cookie_name%" ]
    master_secret_user_provider:
        class: "%master_secret_user_provider.class%"
        arguments: [ "%hexaa_master_secrets%", "@monolog.logger.login"]
    master_secret_authenticator:
        class:     "%master_secret_authenticator.class%"
        arguments: ["@master_secret_user_provider", "@security.http_utils", "@monolog.logger.login"]

# EventListeners
    hexaa.check_policy.action_listener:
        class: "%hexaa_check_policy_listener.class%"
        arguments: [ "@doctrine.orm.entity_manager", "@monolog.logger.login", "@monolog.logger.error", "@monolog.logger.access", "@monolog.logger.modification", "%hexaa_admins%", "@security.token_storage", "@hexaa.hook.hook_handler", "@hexaa.handler.entity_handler" ]
        tags:
            - { name: kernel.event_listener, event: kernel.controller, method: onKernelController }
### Disable hook action listener for now
#    hexaa.invoke_hook.action_listener:
#        class: "%hexaa_hook_listener.class%"
#        arguments: [ "@annotation_reader", "@monolog.logger.hook", "@hexaa.handler.attribute_cache_handler", "@hexaa.hook.cache.memcached", "@hexaa.hook.hook_hint_resolver"]
#        tags:
#            - { name: kernel.event_listener, event: kernel.controller, method: onKernelController }
#            - { name: kernel.event_listener, event: kernel.terminate, method: onKernelTerminate }

# Forms
    hexaa.message.form:
        class: Hexaa\StorageBundle\Form\MessageType
        arguments: [ "@doctrine.orm.entity_manager" ]
        tags:
            - { name: form.type, alias: message }

# Util
    hexaa.hook_extractor.service:
        class: "%hexaa_hook_extractor.class%"
        arguments: [ "@doctrine.orm.entity_manager", "@monolog.logger.hook", "@monolog.logger.release", "@hexaa.hook.cache.memcached" ]

    hexaa.my_handler:
        class: Hexaa\ApiBundle\View\ViewHandler
        arguments: ['@fos_rest.router', '@fos_rest.serializer', '@?fos_rest.templating', '@request_stack', {  }, 400, 204, true, {  }, 'twig']
    hexaa.view_handler:
        parent: fos_rest.view_handler.default
        calls:
            - ['registerHandler', [ 'json', ["@hexaa.my_handler", 'createResponseFake'] ] ]
            - ['registerHandler', [ 'xml', ["@hexaa.my_handler", 'createResponseFake'] ] ]

# Validators
    validator.unique.valid_entityid:
        class: Hexaa\ApiBundle\Validator\Constraints\ValidEntityidValidator
        tags:
            - { name: validator.constraint_validator, alias: validentityid }
        arguments: [ "%hexaa_service_entityids%" ]
    validator.unique.valid_scoped_key:
        class: Hexaa\ApiBundle\Validator\Constraints\ValidScopedKeyValidator
        tags:
            - { name: validator.constraint_validator, alias: valid_scoped_key }
        arguments: [ "%hexaa_master_secrets%" ]
    validator.unique.invitation_has_valid_target:
        class: Hexaa\ApiBundle\Validator\Constraints\InvitationHasValidTargetValidator
        tags:
            - { name: validator.constraint_validator, alias: invitation_has_valid_target }
        arguments: [ "@doctrine.orm.entity_manager", "@security.token_storage", "%hexaa_admins%" ]
    validator.unique.hook_has_valid_target:
        class: Hexaa\ApiBundle\Validator\Constraints\HookHasValidTargetValidator
        tags:
            - { name: validator.constraint_validator, alias: hook_has_valid_target }
    validator.unique.attribute_spec_by_user_and_id:
        class: Hexaa\ApiBundle\Validator\Constraints\AttributeSpecByUserAndIdValidator
        tags:
            - { name: validator.constraint_validator, alias: attribute_spec_by_user_and_id }
        arguments: [ "@doctrine.orm.entity_manager", "@security.token_storage" ]
    validator.unique.service_exists_and_wants_attribute:
        class: Hexaa\ApiBundle\Validator\Constraints\ServiceExistsAndWantsAttributeValidator
        tags:
            - { name: validator.constraint_validator, alias: service_exists_and_wants_attribute }
        arguments: [ "@doctrine.orm.entity_manager", "@security.token_storage" ]
    validator.unique.attribute_has_no_service_if_not_multivalue:
        class: Hexaa\ApiBundle\Validator\Constraints\AttributeValueHasNoServiceIfNotMultivalueValidator
        tags:
            - { name: validator.constraint_validator, alias: attribute_has_no_service_if_not_multivalue }
    validator.unique.principal_can_be_added_to_role:
        class: Hexaa\ApiBundle\Validator\Constraints\PrincipalCanBeAddedToRoleValidator
        tags:
            - { name: validator.constraint_validator, alias: principal_can_be_added_to_role }
        arguments: [ "@doctrine.orm.entity_manager", "@security.token_storage" ]
    validator.unique.entitlement_can_be_added_to_role:
        class: Hexaa\ApiBundle\Validator\Constraints\EntitlementCanBeAddedToRoleValidator
        tags:
            - { name: validator.constraint_validator, alias: entitlement_can_be_added_to_role }
        arguments: [ "@doctrine.orm.entity_manager", "@security.token_storage" ]
    validator.unique.entitlement_uri:
        class: Hexaa\ApiBundle\Validator\Constraints\EntitlementURIValidator
        tags:
            - { name: validator.constraint_validator, alias: entitlement_uri }
        arguments: [ "%hexaa_entitlement_uri_prefix%" ]
    validator.unique.manager_is_organization_member:
        class: Hexaa\ApiBundle\Validator\Constraints\ManagerIsOrganizationMemberValidator
        tags:
            - { name: validator.constraint_validator, alias: manager_is_organization_member }
    validator.unique.attribute_value_is_not_member_of:
        class: Hexaa\ApiBundle\Validator\Constraints\AttributeValueIsNotIsMemberOfValidator
        tags:
            - { name: validator.constraint_validator, alias: attribute_value_is_not_member_of }
    validator.unique.new_entitlement_pack_is_not_private:
        class: Hexaa\ApiBundle\Validator\Constraints\NewEntitlementPackIsEnabledAndNotPrivateValidator
        tags:
            - { name: validator.constraint_validator, alias: new_entitlement_pack_is_not_private }
        arguments: [ "@doctrine.orm.entity_manager", "@security.token_storage" ]
    validator.unique.sp_contact_mail:
        class: Hexaa\ApiBundle\Validator\Constraints\SPContactMailValidator
        tags:
            - { name: validator.constraint_validator, alias: sp_contact_mail }
        arguments: [ "%hexaa_service_entityids%" ]
    validator.unique.is_attribute_spec_allowed_to_be_private:
        class: Hexaa\ApiBundle\Validator\Constraints\IsPublicAttributeSpecEnabledValidator
        tags:
            - { name: validator.constraint_validator, alias: is_attribute_spec_allowed_to_be_private }
        arguments: [ "%hexaa_public_attribute_spec_enabled%" ]
    validator.unique.link_service_checks_out:
        class: Hexaa\ApiBundle\Validator\Constraints\LinkServiceChecksOutValidator
        tags:
            - { name: validator.constraint_validator, alias: link_service_checks_out }
    validator.unique.link_has_organization_or_service:
        class: Hexaa\ApiBundle\Validator\Constraints\LinkHasOrganizationOrServiceValidator
        tags:
            - { name: validator.constraint_validator, alias: link_has_organization_or_service }
