parameters:


# Hooks
    hook_handler.class:                     Hexaa\ApiBundle\Hook\HookHandler
    expire_linker_token_hook.class:         Hexaa\ApiBundle\Hook\ExpireHook\ExpireLinkerTokensHook
    expire_principal_hook.class:            Hexaa\ApiBundle\Hook\ExpireHook\ExpirePrincipalsHook
    expire_consent_hook.class:              Hexaa\ApiBundle\Hook\ExpireHook\ExpireConsentsHook

# Commands
    hexaa_expire_command.class:             Hexaa\StorageBundle\Command\ExpireCommand

# EntityHandler
    hexaa_entity_handler.class:             Hexaa\ApiBundle\Handler\EntityHandler

#Security
    personal_apikey_user_provider.class:    Hexaa\ApiBundle\Security\personalApiKey\PersonalApiKeyUserProvider
    personal_apikey_authenticator.class:    Hexaa\ApiBundle\Security\personalApiKey\PersonalApiKeyAuthenticator
    master_secret_user_provider.class:      Hexaa\ApiBundle\Security\masterSecret\MasterSecretUserProvider
    master_secret_authenticator.class:      Hexaa\ApiBundle\Security\masterSecret\MasterSecretAuthenticator

# EventListeners
    hexaa_check_policy_listener.class:      Hexaa\ApiBundle\EventListener\CheckPolicyListener

services:

# Hooks
    hexaa.hook.hook_handler:
        class: %hook_handler.class%
        arguments: [ "@monolog.logger.error" ]
    hexaa.hook.expire_linker_token_hook:
        class: %expire_linker_token_hook.class%
        arguments: [ @doctrine.orm.entity_manager, "@monolog.logger.modification", "@monolog.logger.error" ]
        lazy: true
    hexaa.hook.expire_principal_hook:
        class: %expire_principal_hook.class%
        arguments: [ @doctrine.orm.entity_manager, "@monolog.logger.modification", "@monolog.logger.error", %hexaa_principal_expiration_limit% ]
        lazy: true
    hexaa.hook.expire_consents_hook:
        class: %expire_consent_hook.class%
        arguments: [ @doctrine.orm.entity_manager, "@monolog.logger.modification", "@monolog.logger.error", "@monolog.logger.email", "@mailer", %hexaa_ui_url% ]
        lazy: true

# Commands
    hexaa.commands.expire:
        class: %hexaa_expire_command.class%
        arguments: [ "@hexaa.hook.expire_linker_token_hook", "@hexaa.hook.expire_principal_hook", "@hexaa.hook.expire_consents_hook" ]
        tags:
            - { name: console.command }

# EntityHandler
    hexaa.handler.entity_handler:
        class: %hexaa_entity_handler.class%
        arguments: [ "@doctrine.orm.entity_manager", "@monolog.logger.error" ]

# Security
    personal_apikey_user_provider:
        class: %personal_apikey_user_provider.class%
        arguments: [ "@doctrine.orm.entity_manager", "@monolog.logger.login", "@monolog.logger.modification" ]
    personal_apikey_authenticator:
        class:     %personal_apikey_authenticator.class%
        arguments: ["@personal_apikey_user_provider", "@security.http_utils", "@monolog.logger.login"]
    master_secret_user_provider:
        class: %master_secret_user_provider.class%
        arguments: [%hexaa_master_secrets%, "@monolog.logger.login"]
    master_secret_authenticator:
        class:     %master_secret_authenticator.class%
        arguments: ["@master_secret_user_provider", "@security.http_utils", "@monolog.logger.login"]

# EventListeners
    hexaa.check_policy.action_listener:
        class: %hexaa_check_policy_listener.class%
        arguments: [ "@doctrine.orm.entity_manager", "@monolog.logger.login", "@monolog.logger.error", "@monolog.logger.access", "@monolog.logger.modification", %hexaa_admins%, "@security.token_storage", "@hexaa.hook.hook_handler", "@hexaa.handler.entity_handler" ]
        tags:
            - { name: kernel.event_listener, event: kernel.controller, method: onKernelController }

# Validators
    validator.unique.valid_entityid:
        class: Hexaa\ApiBundle\Validator\Constraints\ValidEntityidValidator
        tags:
            - { name: validator.constraint_validator, alias: validentityid }
        arguments: [%hexaa_service_entityids%]
    validator.unique.invitation_has_valid_target:
        class: Hexaa\ApiBundle\Validator\Constraints\InvitationHasValidTargetValidator
        tags:
            - { name: validator.constraint_validator, alias: invitation_has_valid_target }
        arguments: [ @doctrine.orm.entity_manager, @security.token_storage, %hexaa_admins% ]
    validator.unique.attribute_spec_by_user_and_id:
        class: Hexaa\ApiBundle\Validator\Constraints\AttributeSpecByUserAndIdValidator
        tags:
            - { name: validator.constraint_validator, alias: attribute_spec_by_user_and_id }
        arguments: [ "@doctrine.orm.entity_manager", "@security.token_storage" ]
    validator.unique.service_exists_and_wants_attribute:
        class: Hexaa\ApiBundle\Validator\Constraints\ServiceExistsAndWantsAttributeValidator
        tags:
            - { name: validator.constraint_validator, alias: service_exists_and_wants_attribute }
        arguments: [ "@doctrine.orm.entity_manager", "@security.token_storage" ]
    validator.unique.principal_can_be_added_to_role:
        class: Hexaa\ApiBundle\Validator\Constraints\PrincipalCanBeAddedToRoleValidator
        tags:
            - { name: validator.constraint_validator, alias: principal_can_be_added_to_role }
        arguments: [ "@doctrine.orm.entity_manager", "@security.token_storage" ]
    validator.unique.entitlement_can_be_added_to_role:
        class: Hexaa\ApiBundle\Validator\Constraints\EntitlementCanBeAddedToRoleValidator
        tags:
            - { name: validator.constraint_validator, alias: entitlement_can_be_added_to_role }
        arguments: [ "@doctrine.orm.entity_manager", "@security.token_storage" ]
    validator.unique.entitlement_uri:
        class: Hexaa\ApiBundle\Validator\Constraints\EntitlementURIValidator
        tags:
            - { name: validator.constraint_validator, alias: entitlement_uri }
        arguments: [ %hexaa_entitlement_uri_prefix% ]
    validator.unique.manager_is_organization_member:
        class: Hexaa\ApiBundle\Validator\Constraints\ManagerIsOrganizationMemberValidator
        tags:
            - { name: validator.constraint_validator, alias: manager_is_organization_member }
    validator.unique.new_entitlement_pack_is_not_private:
        class: Hexaa\ApiBundle\Validator\Constraints\NewEntitlementPackIsEnabledAndNotPrivateValidator
        tags:
            - { name: validator.constraint_validator, alias: new_entitlement_pack_is_not_private }
        arguments: [ "@doctrine.orm.entity_manager", "@security.token_storage" ]
    validator.unique.sp_contact_mail:
        class: Hexaa\ApiBundle\Validator\Constraints\SPContactMailValidator
        tags:
            - { name: validator.constraint_validator, alias: sp_contact_mail }
        arguments: [%hexaa_service_entityids%]
        